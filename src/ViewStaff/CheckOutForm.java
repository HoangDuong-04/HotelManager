/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ViewStaff;

import ConnectionDatabase.ConnectDB;
import com.toedter.calendar.JDateChooser;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.*;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Vector;
import javax.swing.table.DefaultTableModel;

/**
 * @author ADMIN
 */
public class CheckOutForm extends JFrame {

    final String[] header = {"CusName", "CusPhone", "CheckInDate", "RoomID", "TotalDay", "TotalPrice"};
    final DefaultTableModel tb = new DefaultTableModel(header, 0);

    Connection conn = null;
    Statement st = null;
    PreparedStatement pst = null;
    ResultSet rs = null;
    ConnectDB cn = new ConnectDB();

    public CheckOutForm() {
        initComponents();
        loadTable();
        txtDateCheckOut.setDateFormatString("yyyy-MM-dd");
        tableCheckOut.getTableHeader().setFont(new Font("Segoe UI", Font.BOLD, 15));
        tableCheckOut.getTableHeader().setOpaque(false);
        tableCheckOut.getTableHeader().setBackground(new Color(32, 136, 203));
        tableCheckOut.getTableHeader().setForeground(new Color(255, 255, 255));
        tableCheckOut.setRowHeight(25);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        btnClose = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        txtSearchRoom = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtCusName = new javax.swing.JTextField();
        btnSearchRoom = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        txtDateCheckIn = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtCusPhone = new javax.swing.JTextField();
        btnCheckOut = new javax.swing.JButton();
        txtDateCheckOut = new com.toedter.calendar.JDateChooser();
        btnUpdateTime = new javax.swing.JButton();
        btnRefresh = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableCheckOut = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        txtTotalDays = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txtTotalServicePrices = new javax.swing.JTextField();
        label1 = new java.awt.Label();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 102, 102));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/check-out.png"))); // NOI18N
        jLabel1.setText("Check Out");

        btnClose.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/back.png"))); // NOI18N
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 102, 102));
        jLabel3.setText("Room Number");

        txtSearchRoom.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 102, 102));
        jLabel4.setText("Customer Name");

        txtCusName.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        btnSearchRoom.setBackground(new java.awt.Color(255, 204, 102));
        btnSearchRoom.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnSearchRoom.setForeground(new java.awt.Color(255, 255, 255));
        btnSearchRoom.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/loupe.png"))); // NOI18N
        btnSearchRoom.setText("Find Room");
        btnSearchRoom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchRoomActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 102, 102));
        jLabel8.setText("Check In Day");

        txtDateCheckIn.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtDateCheckIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDateCheckInActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 102, 102));
        jLabel9.setText("Check Out Day");

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 102, 102));
        jLabel10.setText("Customer Phone");

        txtCusPhone.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtCusPhone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCusPhoneActionPerformed(evt);
            }
        });

        btnCheckOut.setBackground(new java.awt.Color(255, 204, 102));
        btnCheckOut.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnCheckOut.setForeground(new java.awt.Color(255, 255, 255));
        btnCheckOut.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/check-out.png"))); // NOI18N
        btnCheckOut.setText("Check Out");
        btnCheckOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCheckOutActionPerformed(evt);
            }
        });

        btnUpdateTime.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        btnUpdateTime.setForeground(new java.awt.Color(0, 102, 102));
        btnUpdateTime.setText("Today");
        btnUpdateTime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateTimeActionPerformed(evt);
            }
        });

        btnRefresh.setBackground(new java.awt.Color(255, 204, 102));
        btnRefresh.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnRefresh.setForeground(new java.awt.Color(255, 255, 255));
        btnRefresh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/circular.png"))); // NOI18N
        btnRefresh.setText("Reset");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });

        tableCheckOut.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        tableCheckOut.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Customer Name", "Customer Phone", "Customer ID", "Customer Gender", "Room Number", "Check In Day"
            }
        ));
        jScrollPane1.setViewportView(tableCheckOut);

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 102, 102));
        jLabel5.setText("Total Day");

        txtTotalDays.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 102, 102));
        jLabel11.setText("Total Service Price");

        txtTotalServicePrices.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtTotalServicePrices.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTotalServicePricesActionPerformed(evt);
            }
        });

        label1.setBackground(new java.awt.Color(255, 255, 255));
        label1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        label1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        label1.setForeground(new java.awt.Color(0, 102, 102));
        label1.setText("List of customer is hiring now");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnClose, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(46, 46, 46)
                                        .addComponent(jLabel8)
                                        .addGap(295, 295, 295))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addContainerGap()
                                        .addComponent(jLabel3)
                                        .addGap(18, 18, 18)))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(txtSearchRoom, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(44, 44, 44)
                                        .addComponent(btnSearchRoom))
                                    .addComponent(txtCusPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel10)
                                    .addComponent(jLabel9)
                                    .addComponent(txtDateCheckOut, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(3, 3, 3)
                                        .addComponent(btnCheckOut)
                                        .addGap(42, 42, 42)
                                        .addComponent(btnRefresh))
                                    .addComponent(btnUpdateTime)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(46, 46, 46)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtCusName, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4)
                                    .addComponent(txtDateCheckIn, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addComponent(txtTotalDays, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)
                            .addComponent(txtTotalServicePrices, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(90, 90, 90))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1090, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(410, 410, 410))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(104, 104, 104)
                        .addComponent(jLabel10)
                        .addGap(18, 18, 18)
                        .addComponent(txtCusPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtDateCheckOut, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(226, 226, 226)
                        .addComponent(txtDateCheckIn))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(198, 198, 198)
                                .addComponent(jLabel8))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(136, 136, 136)
                                .addComponent(txtCusName, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(102, 102, 102)
                                .addComponent(jLabel4))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(44, 44, 44)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtSearchRoom, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnSearchRoom, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3))))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnClose)
                            .addComponent(jLabel1))
                        .addGap(61, 61, 61)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(124, 124, 124)
                                .addComponent(txtTotalServicePrices))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(96, 96, 96)
                                        .addComponent(jLabel11))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(34, 34, 34)
                                        .addComponent(txtTotalDays, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel5))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnUpdateTime, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCheckOut, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(441, 441, 441))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 899, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtDateCheckInActionPerformed(ActionEvent evt) {//GEN-FIRST:event_txtDateCheckInActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_txtDateCheckInActionPerformed

    private void txtCusPhoneActionPerformed(ActionEvent evt) {//GEN-FIRST:event_txtCusPhoneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCusPhoneActionPerformed

    private void btnUpdateTimeActionPerformed(ActionEvent evt) {//GEN-FIRST:event_btnUpdateTimeActionPerformed
        // TODO add your handling code here:
        updateDate();
    }//GEN-LAST:event_btnUpdateTimeActionPerformed

    private void btnCloseActionPerformed(ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        // TODO add your handling code here
        Main frm = new Main();
        frm.setLocationRelativeTo(null);
        frm.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnCloseActionPerformed


    private void btnSearchRoomActionPerformed(ActionEvent evt) {
        String roomId = txtSearchRoom.getText();
        String query = "SELECT E.CheckInDate, E.CheckOutDate, R.RoomPrice, C.CusName, C.CusPhone " +
                "FROM Enroll E INNER JOIN Room R ON E.RoomID = R.RoomID " +
                "INNER JOIN Customer C ON E.CusID = C.CusID " +
                "WHERE E.RoomID = ? AND E.CheckOutDate IS NULL";

        try (Connection conn = cn.getConnection();
             PreparedStatement ps = conn.prepareStatement(query)) {

            ps.setString(1, roomId);
            try (ResultSet rs = ps.executeQuery()) {
                if (rs.next()) {
                    txtCusName.setText(rs.getString("CusName"));
                    txtCusPhone.setText(rs.getString("CusPhone"));
                    txtDateCheckIn.setText(rs.getString("CheckInDate"));

                    Date checkInDate = rs.getDate("CheckInDate");
                    Date selectedDate = txtDateCheckOut.getDate();
                    if (checkInDate != null && selectedDate != null) {
                        long diffInMillis = Math.abs(selectedDate.getTime() - checkInDate.getTime());
                        int totalDays = (int) (diffInMillis / (24 * 60 * 60 * 1000));
                        if (totalDays == 0) {
                            totalDays = 1;
                        }
                        txtTotalDays.setText(String.valueOf(totalDays));
                        calculateServicePrice();

                        long price = rs.getLong("RoomPrice");
                        long totalPrice = price * totalDays;
//                      txtTotalPrices.setText(String.valueOf(totalPrice));
                    }
                } else {
                    txtCusName.setText("");
                    txtCusPhone.setText("");
                    txtDateCheckIn.setText("");
                    txtTotalDays.setText("0");
                    txtTotalServicePrices.setText("0");
                    JOptionPane.showMessageDialog(this, "Can't find room with ID: " + roomId);
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public void calculateServicePrice() {
        String sql = "SELECT ServicePrice FROM Service " +
                "INNER JOIN ServiceRoom ON Service.ServiceName = ServiceRoom.ServiceName " +
                "INNER JOIN Enroll ON ServiceRoom.EnrollID = Enroll.EnrollID WHERE Enroll.RoomID = ? AND Enroll.CheckOutDate IS NULL";
        int totalServicePrice = 0;
        int totalDay = Integer.parseInt(txtTotalDays.getText());

        try (Connection conn = cn.getConnection();
             PreparedStatement ps = conn.prepareStatement(sql)) {

            ps.setString(1, txtSearchRoom.getText());
            ResultSet rs = ps.executeQuery();

            while (rs.next()) {
                totalServicePrice += rs.getInt("ServicePrice") * totalDay;
            }
            txtTotalServicePrices.setText(String.valueOf(totalServicePrice));
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    public int calculateTotalPrice() {
        int totalDay = Integer.parseInt(txtTotalDays.getText());
        int totalServicePrice = Integer.parseInt(txtTotalServicePrices.getText());
        String sql = "SELECT RoomPrice FROM Room WHERE RoomID = ? AND RoomStatus = 'Booked'";
        int totalPrice = 0;
        try (Connection conn = cn.getConnection();
             PreparedStatement ps = conn.prepareStatement(sql)) {

            ps.setString(1, txtSearchRoom.getText());
            ResultSet rs = ps.executeQuery();
            int roomPrice = 0;
            while (rs.next()) {
                roomPrice = rs.getInt("RoomPrice");
            }
            totalPrice = totalDay * roomPrice + totalServicePrice;
        } catch (Exception e) {
            e.printStackTrace();
        }
        return totalPrice;
    }
    private void updateRoomStatusNotBooked() {
        String roomId = txtSearchRoom.getText();
        String sql = "UPDATE Room SET RoomStatus = 'Not Booked' WHERE RoomID = ?";

        try (Connection conn = cn.getConnection();
             PreparedStatement ps = conn.prepareStatement(sql)) {

            ps.setString(1, roomId);
            ps.executeUpdate();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void btnCheckOutActionPerformed(ActionEvent evt) {//GEN-FIRST:event_btnCheckOutActionPerformed
        // TODO add your handling code here:
        String checkOutRoom = txtSearchRoom.getText();
        Date checkOut = txtDateCheckOut.getDate();
        String sql = "UPDATE Enroll SET CheckOutDate = ? WHERE RoomID = ? AND CheckOutDate IS NULL";
        String sqlInsertTotal = "UPDATE Enroll SET TotalDay = ?, TotalServicePrice = ?, TotalPrice = ? WHERE RoomID = ? AND CheckOutDate IS NULL";
        int confirmResult = JOptionPane.showConfirmDialog(this, "Are you sure to check out room " + checkOutRoom + "?", "Confirm", JOptionPane.YES_NO_OPTION);
        if (confirmResult == JOptionPane.YES_OPTION) {
            try (Connection conn = cn.getConnection();
                 PreparedStatement pstmt = conn.prepareStatement(sql);
                 PreparedStatement pstmtInsertTotal = conn.prepareStatement(sqlInsertTotal)) {
                pstmtInsertTotal.setInt(1, Integer.parseInt(txtTotalDays.getText()));
                pstmtInsertTotal.setInt(2, Integer.parseInt(txtTotalServicePrices.getText()));
                pstmtInsertTotal.setInt(3, (calculateTotalPrice()));
                pstmtInsertTotal.setString(4, checkOutRoom);
                pstmtInsertTotal.executeUpdate();
                pstmt.setDate(1, new java.sql.Date(checkOut.getTime()));
                pstmt.setString(2, checkOutRoom);
                pstmt.executeUpdate();

                JOptionPane.showMessageDialog(this, "Check out room " + checkOutRoom + " successfully!");
            } catch (Exception e) {
                e.printStackTrace();
            }
            updateRoomStatusNotBooked();
            txtDateCheckOut = null;
            txtTotalDays.setText("");
            txtTotalServicePrices.setText("");
            clearTable();
        } else {
            JOptionPane.showMessageDialog(this, "Check out room " + checkOutRoom + " failed");
        }
    }//GEN-LAST:event_btnCheckOutActionPerformed


    private void btnRefreshActionPerformed(ActionEvent evt) {//GEN-FIRST:event_btnCheckIn1ActionPerformed
        CheckOutForm frm = new CheckOutForm();
        frm.setLocationRelativeTo(null);
        frm.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnCheckIn1ActionPerformed

    private void txtTotalServicePricesActionPerformed(ActionEvent evt) {//GEN-FIRST:event_txtTotalServicePricesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTotalServicePricesActionPerformed

    private void clearTable() {
        txtCusName.setText("");
        txtCusPhone.setText("");
        txtDateCheckIn.setText("");
        loadTable();
    }

    public void loadTable() {
        String sql = "SELECT Customer.CusName, Customer.CusPhone, Enroll.CusID, Customer.CusGender, Room.RoomID, Enroll.CheckInDate, Enroll.CheckOutDate "
                + "FROM Enroll "
                + "INNER JOIN Customer ON Enroll.CusID = Customer.CusID "
                + "INNER JOIN Room ON Enroll.RoomID = Room.RoomID "
                + "WHERE Enroll.CheckOutDate IS NULL";

        try (Connection conn = cn.getConnection();
             Statement stmt = conn.createStatement();
             ResultSet rs = stmt.executeQuery(sql)) {

            DefaultTableModel df = (DefaultTableModel) tableCheckOut.getModel();
            df.setRowCount(0);

            while (rs.next()) {
                Vector<String> row = new Vector<>();
                for (int i = 1; i <= rs.getMetaData().getColumnCount(); i++) {
                    row.add(rs.getString(i));
                }
                df.addRow(row);
            }

            tableCheckOut.setModel(df);

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void updateDate() {
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        txtDateCheckOut.setDateFormatString("yyyy-MM-dd");
        txtDateCheckOut.setDate(new Date());
    }


    public static void main(String args[]) {
        EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CheckOutForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCheckOut;
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnSearchRoom;
    private javax.swing.JButton btnUpdateTime;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private java.awt.Label label1;
    private javax.swing.JTable tableCheckOut;
    private javax.swing.JTextField txtCusName;
    private javax.swing.JTextField txtCusPhone;
    private javax.swing.JTextField txtDateCheckIn;
    private com.toedter.calendar.JDateChooser txtDateCheckOut;
    private javax.swing.JTextField txtSearchRoom;
    private javax.swing.JTextField txtTotalDays;
    private javax.swing.JTextField txtTotalServicePrices;
    // End of variables declaration//GEN-END:variables
}
